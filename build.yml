apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: generic-java-jenkins-pipeline
metadata:
  annotations:
    description: Application template for JWS applications built using a Jenkins Pipeline
    iconClass: icon-tomcat
    tags: tomcat,tomcat8,java,jboss,xpaas,jenkins-ci
    version: 1.2.0
  name: generic-java-jenkins-pipeline
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${SA_NAME}
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: ${SA_NAME}_edit
    namespace: ${NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${SA_NAME}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}-cicd
    name: ${APPLICATION_NAME}-cicd-dev
    namespace: ${NAMESPACE}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}-cicd
    name: ${APPLICATION_NAME}-cicd-pre-ivt
    namespace: ${NAMESPACE}
    dockerImageRepository: mhill.azurecr.io/${APPLICATION_NAME}-pre-ivt:ivtnew
- apiVersion: tekton.dev/v1alpha1
  kind: PipelineResource
  metadata:
    name: ${APPLICATION_NAME}-image
    namespace: ${NAMESPACE}
  spec:
    type: image
    params:
    - name: url
      value: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${APPLICATION_NAME}
- apiVersion: tekton.dev/v1alpha1
  kind: PipelineResource
  metadata:
    name: ${APPLICATION_NAME}-git
    namespace: ${NAMESPACE}
  spec:
    type: git
    params:
    - name: url
      value: ${APPLICATION_SOURCE_REPO}
    - name: revision
      value: ${APPLICATION_SOURCE_REF}
- apiVersion: tekton.dev/v1alpha1
  kind: PipelineResource
  metadata:
    name: ${APPLICATION_NAME}-git-pre-ivt
    namespace: ${NAMESPACE}
  spec:
    type: git
    params:
    - name: url
      value: ${APPLICATION_SOURCE_REPO}
    - name: revision
      value: jan-release
- apiVersion: tekton.dev/v1beta1
  kind: Task
  metadata:
    name: maven-build-binary-build
    namespace: ${NAMESPACE}
  spec:
    resources:
      inputs:
      - name: source
        type: git
    params:
      - name: buildConfig
        description: the name of the build config
    steps:   
    - name: package
      image: maven:3.6.0-jdk-8-slim
      workingDir: /workspace/source
      command:
      - /usr/bin/mvn
      args:
      - package
    - name: make-upload-dir 
      image: quay.io/openshift-pipeline/openshift-cli:latest
      command: ["mkdir"]
      args:
        - -p
        - /workspace/source/upload
    - name: copy-assets 
      image: quay.io/openshift-pipeline/openshift-cli:latest
      command: ["cp"]
      args:
        - /workspace/source/target/shift-rest-1.0.0-SNAPSHOT.jar
        - /workspace/source/upload 
    - name: oc-binary-build 
      image: quay.io/openshift-pipeline/openshift-cli:latest
      command: ["/usr/local/bin/oc"]
      workingDir: /workspace/source/upload
      args:
        - start-build
        - -w
        - -F
        - "$(params.buildConfig)"
        - --from-dir
        - "."
- apiVersion: tekton.dev/v1beta1
  kind: Task
  metadata:
    name: helm-upgrade-from-repo
    labels:
      app.kubernetes.io/version: "0.1"
    annotations:
      tekton.dev/tags: helm
  spec:
    resources:
      inputs:
      - name: source
        type: git
    params:
      - name: helmRepo
        description: "Specify a specific helm repo"
      - name: username
        description: "Username"
      - name: password
        description: "Pass"
      - name: chartName
        description: "Specify chart name that will be deployed"
      - name: releaseVersion
        description: The helm release version in semantic versioning format
        default: "v1.0.0"
      - name: releaseName
        description: The helm release name
        default: "helmRelease"
      - name: releaseNamespace
        description: The helm release namespace
        default: ""
      - name: overwriteValues
        description: "Specify the values you want to overwrite, comma separated: autoscaling.enabled=true,replicas=1"
        default: ""
      - name: helmVersion
        description: "Specify a specific helm version"
        default: "latest"
      - name: env
        description: "Specify what env to use for values"
        default: "dev"
    steps:
      - name: upgrade-from-repo
        image: ersitzt/helm-docker:latest
        workingDir: /workspace/source
        script: |
          echo "setting HELM_EXPERIMENTAL_OCI=1"
          export HELM_EXPERIMENTAL_OCI=1
          echo "logging in to helm repo"
          helm registry login "$(inputs.params.helmRepo)" --username "$(inputs.params.username)" --password "$(inputs.params.password)"
          echo "pulling chart to local repo"
          helm chart pull "$(inputs.params.helmRepo)"/"$(inputs.params.chartName)":v1
          echo "exporting helm chart"
          helm chart export "$(inputs.params.helmRepo)"/"$(inputs.params.chartName)":v1 --destination .
          echo "installing helm chart"
          cd ocp/
          helm upgrade --install ocp-openjdk ../"$(inputs.params.chartName)" -f ./"$(inputs.params.env)".yaml --namespace "$(inputs.params.releaseNamespace)" --set "$(inputs.params.overwriteValues)" --post-renderer ./kustomize
- apiVersion: tekton.dev/v1beta1
  kind: Task
  metadata:
    name: deploy
    namespace: ${NAMESPACE}
  spec:
    params:
      - name: fromNamespace
        description: The namespace we are tagging from
      - name: toNamespace
        description: The namespace we are tagging to  
      - name: tag
        description: The image tag
      - name: fromImageStream
        description: The imageStream we are tagging from
      - name: toImageStream
        description: The imageStream we are tagging to
      - name: deploymentResource
        description: the deployment resource, e.g deployment or deploymentconfig
      - name: deployment
        description: the deployment name
    steps:
      - name: tag-image
        image: quay.io/openshift-pipeline/openshift-cli:latest
        command: ["/usr/local/bin/oc"]
        args:
          - tag
          - "$(params.fromNamespace)/$(params.fromImageStream):$(params.tag)"
          - "$(params.toNamespace)/$(params.toImageStream):$(params.tag)"
      - name: verify-deployment
        image: quay.io/openshift-pipeline/openshift-cli:latest
        command: ["oc"]
        args:
          - rollout
          - status
          - "$(params.deploymentResource)/$(params.deployment)"
          - -n
          - "$(params.toNamespace)"
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    name: ${APPLICATION_NAME}-deploy-dev
    namespace: ${NAMESPACE}
  spec:
    resources:
    - name: ${APPLICATION_NAME}-git
      type: git
    tasks:
    - name: maven-build-binary-build
      taskRef: 
        name: maven-build-binary-build
      params:
      - name: buildConfig
        value: ${APPLICATION_NAME}-cicd-dev
      resources:
        inputs:
        - name: source
          resource: ${APPLICATION_NAME}-git                 
    - name: helm-upgrade
      taskRef:
        name: helm-upgrade-from-repo
      runAfter:
        - maven-build-binary-build
      params:
      - name: helmRepo
        value: mhill.azurecr.io/helm
      - name: username
        value: mhill
      - name: password
        value: WUeQdKnivwFcGr8d3QqDrxevjvIX7IV+
      - name: chartName
        value: ocp-openjdk
      - name: releaseVersion
        value: "v1"
      - name: releaseName
        value: "v1"
      - name: releaseNamespace
        value: ${APPLICATION_NAME}-dev
      - name: overwriteValues
        value: nameOverride=${APPLICATION_NAME}-dev,fullnameOverride=${APPLICATION_NAME}-dev
      - name: helmVersion
        value: "latest"
      - name: env
        value: dev
      resources:
        inputs:
        - name: source
          resource: ${APPLICATION_NAME}-git    
    - name: deploy-to-dev
      taskRef:
        name: deploy
      runAfter:
        - helm-upgrade
      params:
      - name: fromNamespace
        value: ${APPLICATION_NAME}-cicd
      - name: toNamespace
        value: ${APPLICATION_NAME}-dev  
      - name: tag
        value: devnew 
      - name: fromImageStream
        value: ${APPLICATION_NAME}-cicd-dev
      - name: toImageStream
        value: ${APPLICATION_NAME}-dev
      - name: deploymentResource
        value: deploymentconfig
      - name: deployment
        value: ${APPLICATION_NAME}-dev
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    name: ${APPLICATION_NAME}-deploy-qa
    namespace: ${NAMESPACE}
  spec:
    resources:
    - name: ${APPLICATION_NAME}-git
      type: git
    tasks: 
    - name: helm-upgrade
      taskRef:
        name: helm-upgrade-from-repo
      params:
      - name: helmRepo
        value: mhill.azurecr.io/helm
      - name: username
        value: mhill
      - name: password
        value: WUeQdKnivwFcGr8d3QqDrxevjvIX7IV+
      - name: chartName
        value: ocp-openjdk
      - name: releaseVersion
        value: "v1"
      - name: releaseName
        value: ${APPLICATION_NAME}
      - name: releaseNamespace
        value: ${APPLICATION_NAME}-qa
      - name: overwriteValues
        value: nameOverride=${APPLICATION_NAME}-qa,fullnameOverride=${APPLICATION_NAME}-qa
      - name: helmVersion
        value: "latest"
      - name: env
        value: qa
      resources:
        inputs:
        - name: source
          resource: ${APPLICATION_NAME}-git                
    - name: deploy-to-qa
      taskRef:
        name: deploy
      runAfter:
        - helm-upgrade
      params:
      - name: fromNamespace
        value: ${APPLICATION_NAME}-dev
      - name: toNamespace
        value: ${APPLICATION_NAME}-qa  
      - name: tag
        value: devnew 
      - name: fromImageStream
        value: ${APPLICATION_NAME}-dev
      - name: toImageStream
        value: ${APPLICATION_NAME}-qa
      - name: deploymentResource
        value: deploymentconfig
      - name: deployment
        value: ${APPLICATION_NAME}-qa 
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    name: ${APPLICATION_NAME}-deploy-pre-ivt
    namespace: ${NAMESPACE}
  spec:
    resources:
    - name: ${APPLICATION_NAME}-git-pre-ivt
      type: git
    params:
    - name: git-revision
      type: string
    tasks:
    - name: maven-build-binary-build
      taskRef: 
        name: maven-build-binary-build
      params:
      - name: buildConfig
        value: ${APPLICATION_NAME}-cicd-pre-ivt
      resources:
        inputs:
        - name: source
          resource: ${APPLICATION_NAME}-git-pre-ivt                 
    - name: helm-upgrade
      taskRef:
        name: helm-upgrade-from-repo
      runAfter:
        - maven-build-binary-build
      params:
      - name: helmRepo
        value: mhill.azurecr.io/helm
      - name: username
        value: mhill
      - name: password
        value: WUeQdKnivwFcGr8d3QqDrxevjvIX7IV+
      - name: chartName
        value: ocp-openjdk
      - name: releaseVersion
        value: "v1"
      - name: releaseName
        value: "v1"
      - name: releaseNamespace
        value: ${APPLICATION_NAME}-pre-ivt
      - name: overwriteValues
        value: nameOverride=${APPLICATION_NAME}-pre-ivt,fullnameOverride=${APPLICATION_NAME}-pre-ivt
      - name: helmVersion
        value: "latest"
      - name: env
        value: pre-ivt
      resources:
        inputs:
        - name: source
          resource: ${APPLICATION_NAME}-git-pre-ivt    
    - name: deploy-to-pre-ivt
      taskRef:
        name: deploy
      runAfter:
        - helm-upgrade
      params:
      - name: fromNamespace
        value: mhill.azurecr.io
      - name: toNamespace
        value: ${APPLICATION_NAME}-pre-ivt  
      - name: tag
        value: ivtnew 
      - name: fromImageStream
        value: ${APPLICATION_NAME}-pre-ivt
      - name: toImageStream
        value: ${APPLICATION_NAME}-pre-ivt
      - name: deploymentResource
        value: deploymentconfig
      - name: deployment
        value: ${APPLICATION_NAME}-pre-ivt                          
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    name: ${APPLICATION_NAME}-deploy-ivt
    namespace: ${NAMESPACE}
  spec:
    resources:
    - name: ${APPLICATION_NAME}-git-pre-ivt
      type: git
    tasks: 
    - name: helm-upgrade
      taskRef:
        name: helm-upgrade-from-repo
      params:
      - name: helmRepo
        value: mhill.azurecr.io/helm
      - name: username
        value: mhill
      - name: password
        value: WUeQdKnivwFcGr8d3QqDrxevjvIX7IV+
      - name: chartName
        value: ocp-openjdk
      - name: releaseVersion
        value: "v1"
      - name: releaseName
        value: ${APPLICATION_NAME}
      - name: releaseNamespace
        value: ${APPLICATION_NAME}-ivt
      - name: overwriteValues
        value: nameOverride=${APPLICATION_NAME}-ivt,fullnameOverride=${APPLICATION_NAME}-ivt
      - name: helmVersion
        value: "latest"
      - name: env
        value: ivt
      resources:
        inputs:
        - name: source
          resource: ${APPLICATION_NAME}-git-pre-ivt                
    - name: deploy-to-ivt
      taskRef:
        name: deploy
      runAfter:
        - helm-upgrade
      params:
      - name: fromNamespace
        value: ${APPLICATION_NAME}-pre-ivt
      - name: toNamespace
        value: ${APPLICATION_NAME}-ivt  
      - name: tag
        value: ivtnew 
      - name: fromImageStream
        value: ${APPLICATION_NAME}-pre-ivt
      - name: toImageStream
        value: ${APPLICATION_NAME}-ivt
      - name: deploymentResource
        value: deploymentconfig
      - name: deployment
        value: ${APPLICATION_NAME}-ivt 
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-cicd-dev
    namespace: "${NAMESPACE}"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}-cicd-dev:devnew
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${IMAGE_STREAM_TAG_NAME}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-cicd-pre-ivt
    namespace: "${NAMESPACE}"
  spec:
    output:
      to:
        kind: DockerImage
        name: mhill.azurecr.io/${APPLICATION_NAME}-pre-ivt:ivtnew
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${IMAGE_STREAM_TAG_NAME}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: basic-spring
- description: The namespace to deploy into
  name: NAMESPACE
  required: true
- description: Git source URI for application
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/redhat-cop/container-pipelines.git
- description: Git branch/tag reference
  name: SOURCE_REPOSITORY_REF
  value: "master"
- description: Path within Git project to build; empty for root project directory.
  name: CONTEXT_DIR
  value: basic-spring-boot
- description: Source code repo for demo app
  name: APPLICATION_SOURCE_REPO
  required: true
  value: https://github.com/mattheh/spring-rest.git
- description: Source code branch for demo app
  name: APPLICATION_SOURCE_REF
  value: dev
- description: Path within Git project pointing to the pipeline run script
  name: PIPELINE_SCRIPT
  value: Jenkinsfile
- description: GitHub trigger secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: Image stream tag for the image you'd like to use to build the application
  name: IMAGE_STREAM_TAG_NAME
  required: true
  value: redhat-openjdk18-openshift:1.1
- description: Name of a service account that can deploy to this project
  name: SA_NAME
  required: true
  value: tekton
